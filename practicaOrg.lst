     1                                   sys_Exit       equ     1 ;id codigos del sistema
     2                                  
     3                                   global _start
     4                                   extern printf
     5                                  
     6                                  segment .data
     7 00000000 4269656E76656E6964-             msgBienv:	db	'Bienvenido a la practica de organizacion de computadores', 0AH,0
     8 00000009 6F2061206C61207072-
     9 00000012 616374696361206465-
    10 0000001B 206F7267616E697A61-
    11 00000024 63696F6E2064652063-
    12 0000002D 6F6D70757461646F72-
    13 00000036 65730A00           
    14 0000003A 19D302002000000022-             arreglo:	dd	185113,32,34,23,4,234,34,5,345,34,5,34,5
    15 00000043 000000170000000400-
    16 0000004C 0000EA000000220000-
    17 00000055 000500000059010000-
    18 0000005E 220000000500000022-
    19 00000067 00000005000000     
    20 0000006E 34000000                        tamArreglo: dd 	52;13*4
    21 00000072 25640A00                        formatoDec: db '%d', 0AH,0
    22 00000076 25640A00                		format:		db '%d', 0AH,0
    23                                  
    24                                  
    25                                  segment .bss
    26 00000000 <res 00000008>                  temp:	resq 1
    27                                  
    28                                   segment .text
    29                                  
    30                                  _start: 
    31 00000000 48BF-                   mov rdi, msgBienv ; rdi gets the first argument (a pointer)
    32 00000002 [0000000000000000] 
    33 0000000A 48B800000000000000-     	mov rax, 0 
    34 00000013 00                 
    35 00000014 E8(00000000)            	call printf
    36                                  	
    37                                  
    38 00000019 B800000000              	mov	eax, 0
    39 0000001E 67488BB0[3A000000]      	mov dword rsi, [arreglo + eax]
    40 00000026 8B1C25[6E000000]        	mov	ebx, [tamArreglo]
    41                                  		ciclo1:
    42 0000002D 50                      	push rax
    43 0000002E 53                      	push rbx
    44 0000002F 39D8                    	cmp	eax,ebx	
    45 00000031 7D24                    	jge finciclo1
    46 00000033 67488BB0[3A000000]      		mov dword rsi, [arreglo + eax]
    47 0000003B 48BF-                   		mov rdi, formatoDec 
    48 0000003D [7200000000000000] 
    49 00000045 B800000000              		mov eax, 0
    50                                  			inter:
    51 0000004A E8(00000000)            		call printf
    52 0000004F 5B                      		pop rbx
    53 00000050 58                      		pop rax
    54 00000051 4883C004                		add  rax,4
    55 00000055 EBD6                    	jmp ciclo1
    56                                  	finciclo1:
    57                                  
    58                                  
    59 00000057 EB00                    jmp Exit
    60                                  
    61                                  
    62                                   Exit: 
    63 00000059 B801000000                      mov     eax, sys_Exit
    64 0000005E BB00000000                      mov     ebx, 0
    65 00000063 CD80                            int     80H
    66                                  
    67                                  
    68                                  
    69                                  
