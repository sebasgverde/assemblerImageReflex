     1                                   sys_Exit       equ     1 ;id codigos del sistema
     2                                  
     3                                   global _start
     4                                   extern printf
     5                                  
     6                                  segment .data
     7 00000000 4269656E76656E6964-             msgBienv:	db	'Bienvenido a la practica de organizacion de computadores', 0AH
     8 00000009 6F2061206C61207072-
     9 00000012 616374696361206465-
    10 0000001B 206F7267616E697A61-
    11 00000024 63696F6E2064652063-
    12 0000002D 6F6D70757461646F72-
    13 00000036 65730A             
    14 00000039 0C0000002000000022-             arreglo:	dd	12,32,34,23,4,234,34,5,345,34,5,34,5
    15 00000042 000000170000000400-
    16 0000004B 0000EA000000220000-
    17 00000054 000500000059010000-
    18 0000005D 220000000500000022-
    19 00000066 00000005000000     
    20 0000006D 25640A00                        formatoDec: db '%d', 0AH,0
    21 00000071 25640A00                		format:		db '%d', 0AH,0
    22                                  
    23                                  
    24                                  segment .bss
    25 00000000 <res 00000008>                  temp:	resq 1
    26                                  
    27                                   segment .text
    28                                  
    29                                  _start: 
    30 00000000 48BF-                   mov rdi, msgBienv ; rdi gets the first argument (a pointer)
    31 00000002 [0000000000000000] 
    32 0000000A 48B800000000000000-     	mov rax, 0 
    33 00000013 00                 
    34 00000014 E8(00000000)            	call printf
    35                                  	
    36                                  
    37 00000019 B800000000              	mov	eax, 0
    38 0000001E BB05000000              	mov	ebx, 5
    39                                  		ciclo1:
    40 00000023 50                      	push rax
    41 00000024 53                      	push rbx
    42 00000025 39D8                    	cmp	eax,ebx	
    43 00000027 7D1E                    	jge finciclo1
    44 00000029 4889C6                  		mov dword rsi, rax
    45 0000002C 48BF-                   		mov rdi, formatoDec 
    46 0000002E [6D00000000000000] 
    47 00000036 B800000000              		mov eax, 0
    48                                  			inter:
    49 0000003B E8(00000000)            		call printf
    50 00000040 5B                      		pop rbx
    51 00000041 58                      		pop rax
    52 00000042 48FFC0                  		inc  rax
    53 00000045 EBDC                    	jmp ciclo1
    54                                  	finciclo1:
    55                                  
    56                                  
    57 00000047 EB00                    jmp Exit
    58                                  
    59                                  
    60                                   Exit: 
    61 00000049 B801000000                      mov     eax, sys_Exit
    62 0000004E BB00000000                      mov     ebx, 0
    63 00000053 CD80                            int     80H
    64                                  
    65                                  
    66                                  
    67                                  
